# Specify the base image
FROM node:18-alpine

# Create a directory for the app
WORKDIR /app

# Copy the package files and install dependencies
COPY package*.json ./
RUN npm install

# Copy the app files
COPY . .

#Use ARG command to define a build-time variable for each environment variable I want to pass.
ARG JWT_ACTIVIATE_SECRET_KEY 
ARG SERVER_PORT 
ARG MONGO_URL
ARG EMAIL_CONFIRMATION_URL
ARG SALT
ARG DOMAIN
ARG MAILGUN_APIKEY
ARG EXPIRE
ARG EMAIL_SEND
ARG ACCESS_TOKEN_SECRET_PRIVATE
ARG ACCESS_TOKEN_SECRET_PUBLIC
ARG REFRESH_TOKEN_SECRET_PRIVATE
ARG REFRESH_TOKEN_SECRET_PUBLIC
ARG JWT_SECRET_KEY
ARG SENDER_EMAIL
ARG SENDER_EMAIL_PASSWORD
ARG MAILGUN_API_KEY
ARG MAILGUN_DOMAIN

# Use  ENV command to set the environment variables inside the container
ENV JWT_ACTIVIATE_SECRET_KEY=${JWT_ACTIVIATE_SECRET_KEY}
ENV SERVER_PORT=${SERVER_PORT}
ENV MONGO_URL=${MONGO_URL}
ENV EMAIL_CONFIRMATION_URL=${EMAIL_CONFIRMATION_URL}
ENV SALT=${SALT}
ENV DOMAIN=${DOMAIN}
ENV MAILGUN_APIKEY=${MAILGUN_APIKEY}
ENV EXPIRE=${EXPIRE}
ENV EMAIL_SEND=${EMAIL_SEND}
ENV ACCESS_TOKEN_SECRET_PRIVATE=${ACCESS_TOKEN_SECRET_PRIVATE}
ENV ACCESS_TOKEN_SECRET_PUBLIC=${ACCESS_TOKEN_SECRET_PUBLIC}
ENV REFRESH_TOKEN_SECRET_PRIVATE=${REFRESH_TOKEN_SECRET_PRIVATE}
ENV REFRESH_TOKEN_SECRET_PUBLIC=${REFRESH_TOKEN_SECRET_PUBLIC}
ENV JWT_SECRET_KEY=${JWT_SECRET_KEY}
ENV SENDER_EMAIL=${SENDER_EMAIL}
ENV SENDER_EMAIL_PASSWORD=${SENDER_EMAIL_PASSWORD}
ENV MAILGUN_API_KEY=${MAILGUN_API_KEY}
ENV MAILGUN_DOMAIN=${MAILGUN_DOMAIN}

# Build the app
RUN npm run build 

# Backed server is running at 9090
EXPOSE 9090

# Start the app
CMD ["npm", "start"]
