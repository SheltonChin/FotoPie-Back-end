
name: Deploy to ECR

on:
 
  push:
    branches: [ dev ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: gogogo
        IMAGE_TAG: latest
        JWT_ACTIVIATE_SECRET_KEY : ${{ secrets.JWT_ACTIVIATE_SECRET_KEY }}
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        MONGO_URL: ${{ secrets.MONGO_URL }}
        EMAIL_CONFIRMATION_URL: ${{ secrets.EMAIL_CONFIRMATION_URL }}
        SALT: ${{ secrets.SALT }}
        DOMAIN: ${{ secrets.DOMAIN }}
        MAILGUN_APIKEY: ${{ secrets.MAILGUN_APIKEY }}
        EXPIRE: ${{ secrets.EXPIRE }}
        EMAIL_SEND: ${{ secrets.EMAIL_SEND }}
        ACCESS_TOKEN_SECRET_PRIVATE: ${{ secrets.ACCESS_TOKEN_SECRET_PRIVATE }}
        ACCESS_TOKEN_SECRET_PUBLIC: ${{ secrets.ACCESS_TOKEN_SECRET_PUBLIC }}
        REFRESH_TOKEN_SECRET_PRIVATE: ${{ secrets.REFRESH_TOKEN_SECRET_PRIVATE }}
        REFRESH_TOKEN_SECRET_PUBLIC: ${{ secrets.REFRESH_TOKEN_SECRET_PUBLIC }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_EMAIL_PASSWORD: ${{ secrets.SENDER_EMAIL_PASSWORD }}
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
